# Generated by Django 5.1.1 on 2024-10-01 17:11

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DailyReward",
            fields=[
                (
                    "createdAt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата добавления в базу"
                    ),
                ),
                (
                    "updatedAt",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата изменения в базе"
                    ),
                ),
                (
                    "day",
                    models.IntegerField(
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="День",
                    ),
                ),
                ("points", models.IntegerField(verbose_name="Кол-во поинтов")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TgUser",
            fields=[
                (
                    "createdAt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата добавления в базу"
                    ),
                ),
                (
                    "updatedAt",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата изменения в базе"
                    ),
                ),
                (
                    "id",
                    models.BigIntegerField(
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="TG ID",
                    ),
                ),
                ("name", models.CharField(verbose_name="Имя")),
                (
                    "level",
                    models.IntegerField(
                        choices=[(1, "1 level"), (2, "2 level"), (3, "3 level")],
                        default=1,
                        verbose_name="Уровень",
                    ),
                ),
                ("banned", models.BooleanField(default=False, verbose_name="Бан")),
                ("balance", models.BigIntegerField(default=0, verbose_name="Баланс")),
                (
                    "lastClaim",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Последний claim"
                    ),
                ),
                ("code", models.CharField(verbose_name="Реф. код")),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
            },
        ),
        migrations.CreateModel(
            name="Referrals",
            fields=[
                (
                    "createdAt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата добавления в базу"
                    ),
                ),
                (
                    "updatedAt",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата изменения в базе"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "invited",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invited_referrals",
                        to="users.tguser",
                        verbose_name="Приглашенный",
                    ),
                ),
                (
                    "inviter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inviter_referrals",
                        to="users.tguser",
                        verbose_name="Пригласивший",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserDailyReward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "createdAt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата добавления в базу"
                    ),
                ),
                (
                    "updatedAt",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата изменения в базе"
                    ),
                ),
                (
                    "lastAt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Последняя получка"
                    ),
                ),
                (
                    "day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.dailyreward",
                        verbose_name="День",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.tguser",
                        verbose_name="Юзер",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
